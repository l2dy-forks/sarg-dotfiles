"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.config = exports.Provider = exports.getBotOutput = exports.getBot = exports.BotWebhook = exports.BotCommands = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
exports.BotCommands = null;
utilities.lazyLoad(exports, ["BotCommands"], () => require("./botCommands"));
exports.BotWebhook = null;
utilities.lazyLoad(exports, ["BotWebhook"], () => require("./botWebhook"));
exports.getBot = null;
exports.getBotOutput = null;
utilities.lazyLoad(exports, ["getBot", "getBotOutput"], () => require("./getBot"));
exports.Provider = null;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));
// Export sub-modules:
const config = require("./config");
exports.config = config;
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "telegram:index/botCommands:BotCommands":
                return new exports.BotCommands(name, undefined, { urn });
            case "telegram:index/botWebhook:BotWebhook":
                return new exports.BotWebhook(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("telegram", "index/botCommands", _module);
pulumi.runtime.registerResourceModule("telegram", "index/botWebhook", _module);
pulumi.runtime.registerResourcePackage("telegram", {
    version: utilities.getVersion(),
    constructProvider: (name, type, urn) => {
        if (type !== "pulumi:providers:telegram") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new exports.Provider(name, undefined, { urn });
    },
});
//# sourceMappingURL=index.js.map